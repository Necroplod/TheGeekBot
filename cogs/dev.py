import datetime
import discord
import aeval

from discord.ext import commands

class dev(commands.Cog):

    def __init__(self, client):
        self.client = client

    @commands.command(hidden=True)
    @commands.is_owner()
    async def load(self, ctx, extensions):
        await self.client.load_extension(f'cogs.{extensions}')
        embed = discord.Embed(
            title = "",
            description = f"–ö–æ–≥ **{extensions}** –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!",
            color = 0x93ff15
        )
        embed.set_footer(icon_url = self.client.user.avatar.url, text = f'{self.client.user.name} | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã')
        await ctx.send(embed=embed)

    @commands.command(hidden=True)
    @commands.is_owner()
    async def unload(self, ctx, extensions):
        await self.client.unload_extension(f'cogs.{extensions}')
        embed = discord.Embed(
            title = "",
            description = f"–ö–æ–≥ **{extensions}** –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–≥—Ä—É–∂–µ–Ω!",
            color = 0xf64c6e
        )
        embed.set_footer(icon_url = self.client.user.avatar.url, text = f'{self.client.user.name} | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã')
        await ctx.send(embed=embed)

    @commands.command(hidden=True)
    @commands.is_owner()
    async def reload(self, ctx, extensions):
        await self.client.unload_extension(f'cogs.{extensions}')
        await self.client.load_extension(f'cogs.{extensions}')
        embed = discord.Embed(
            title = "",
            description = f"–ö–æ–≥ **{extensions}** –±—ã–ª —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω!",
            color = 0xf64c6e
            
        )
        embed.set_footer(icon_url = self.client.user.avatar.url, text = f'{self.client.user.name} | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã')
        await ctx.send(embed=embed)

    @commands.command(hidden=True)
    @commands.is_owner()
    async def shutdown(self, ctx):

        await ctx.send(f"```Shutdown {self.client.user.name} : {str(datetime.datetime.now())}```")
        await self.client.close()

    @commands.command(hidden=True)
    async def eval(self, ctx):
        own = [678632704874381334, 730857619077464185]
        if ctx.author.id not in own:
            pass
        else:
            standart_args = {
                "discord": discord,
                "commands": commands,
                "client": self.client,
                "ctx": ctx,
            }
            await ctx.send('–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –¥–ª—è –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è...', delete_after = 5)
            start = datetime.datetime.now()
            try:
                code = await self.client.wait_for('message', check=lambda msg: msg.author == ctx.author)
                compile = code.content
                compile = compile.replace('```', '')
                r = await aeval.aeval(f"""{compile}""", standart_args, {})
                ended = datetime.datetime.now() - start
                embed = discord.Embed(
                    title="üéØ | –£—Å–ø–µ—à–Ω–æ!",
                    description=f"–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞: {ended}",
                    color=0x99ff99
                )
                embed.add_field(name=f'–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', value=f'`{compile}`')
                embed.add_field(name=f'–í—ã–≤–æ–¥:', value=f'`{str(r)}`')
                await ctx.send(embed=embed, delete_after = 5)
            except Exception as e:
                ended = datetime.datetime.now() - start
                embed = discord.Embed(
                    title=f"üéØ | –ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞",
                    description=f'**–û—à–∏–±–∫–∞:**\n```py\n{e}```', color=0xff0000
                )
                embed.add_field(name=f'–í—Ä–µ–º—è:', value=f'`{ended}`')
                await ctx.send(embed=embed, delete_after = 5)



async def setup(client):
    await client.add_cog(dev(client))